basePath: /
definitions:
  models.Message:
    properties:
      chat_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      sender:
        type: string
      type:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      language:
        type: string
      last_name:
        type: string
      level:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API para o projeto SpeakUp
  title: SpeakUp API
  version: "1.0"
paths:
  /message:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all messages
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Message'
            type: array
        "401":
          description: Não autorizado
        "500":
          description: Erro ao buscar mensagens
      security:
      - BearerAuth: []
      summary: Get all messages
      tags:
      - message
  /message/{id}:
    delete:
      consumes:
      - application/json
      description: Remove an existing message from the system
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mensagem deletada com sucesso
        "401":
          description: Não autorizado
        "500":
          description: Erro ao deletar mensagem
      security:
      - BearerAuth: []
      summary: Delete a message
      tags:
      - message
    get:
      consumes:
      - application/json
      description: Retrieve a message using its ID
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "401":
          description: Não autorizado
        "404":
          description: Mensagem não encontrada
      security:
      - BearerAuth: []
      summary: Get a message by ID
      tags:
      - message
    put:
      consumes:
      - application/json
      description: Update an existing message with new information
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      - description: Message object containing content and type
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.Message'
      produces:
      - application/json
      responses:
        "200":
          description: Mensagem atualizada com sucesso
        "400":
          description: Campo obrigatório faltando
        "401":
          description: Não autorizado
        "500":
          description: Erro ao atualizar mensagem
      security:
      - BearerAuth: []
      summary: Update a message
      tags:
      - message
  /message/chat/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve all messages belonging to a specific chat
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Message'
            type: array
        "401":
          description: Não autorizado
        "500":
          description: Erro ao buscar mensagens
      security:
      - BearerAuth: []
      summary: Get messages by chat ID
      tags:
      - message
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /user/{id}:
    delete:
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Delete a user
      tags:
      - users
    get:
      description: Retrieve a user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Update a user
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna um token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: credentials
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              token:
                type: string
            type: object
      summary: Login de usuário
      tags:
      - Autenticação
swagger: "2.0"
